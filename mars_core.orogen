name 'simulation'

using_library "mars"
using_library "multisim-plugin"

import_types_from "tasks/MarsControl.hpp"


# Core orogen module that brings up the mars simulation and
# makes it accessible as a orogen module
# use subclassing to derive robot specific modules, e.g.
#
# task_context 'RobotSimulation' do
#         subclasses 'simulation::Mars'
# end

task_context "Mars" do
	needs_configuration
	
	property('config_dir', '/std/string',"#{ENV['AUTOPROJ_PROJECT_BASE']}/install/configuration/mars-default").
	    doc('the full path to the main configuration folder')

	property('distributed_simulation', 'bool').
	    doc('switch to active the distributed simulation if needed')

	property('enable_gui', 'bool').
	    doc('start the simulation graphical interface with this module')

        property('controller_port', 'int').
            doc('set the controller port, e.g. 1600 for communication with monster')

        property('raw_options', '/std/vector<simulation::Option>').
            doc('forward the original mars arguments, such as -c 1600 for setting the ode port - option consists of name, here: -c and parameter: here 1600')

        # Add a task context
        # operation('addPlugin').
        #       returns('int').
        #       argument('taskcontext', '/
        # method addPlugin(input: TaskContext ) return bool
        # method removePlugin(input: TaskContext) return bool

        input_port('control_action', '/simulation/Control')
end

deployment "simulation" do
        sim = task('mars_simulation', 'simulation::Mars')
	add_default_logger
end



